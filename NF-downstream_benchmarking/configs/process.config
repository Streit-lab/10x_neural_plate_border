#!/usr/bin/env nextflow


params {
    modules {
        'integration_low' {
            publish_dir         = "1_integration_low"
            script              = "${baseDir}/bin/seurat/1_integration_STACAS.R"
        }
        'integration_med' {
            publish_dir         = "1_integration_med"
            script              = "${baseDir}/bin/seurat/1_integration_STACAS.R"
        }
        'integration_high' {
            publish_dir         = "1_integration_high"
            script              = "${baseDir}/bin/seurat/1_integration_STACAS.R"
        }
        'integration_seurat_low' {
            publish_dir         = "1_integration_seurat_low"
            script              = "${baseDir}/bin/seurat/1_integration_STACAS_seurat_low.R"
        }
        'integration_seurat_med' {
            publish_dir         = "1_integration_seurat_med"
            script              = "${baseDir}/bin/seurat/1_integration_STACAS_seurat_med.R"
        }
        'integration_seurat_high' {
            publish_dir         = "1_integration_seurat_high"
            script              = "${baseDir}/bin/seurat/1_integration_STACAS_seurat_high.R"
        }
    }
}

process {
    withName: integration_low {
        container = 'alexthiery/10x-npb-seurat:base-1.7'
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 16.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
    withName: integration_med {
        container = 'alexthiery/10x-npb-seurat:base-1.7'
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
    withName: integration_high {
        container = 'alexthiery/10x-npb-seurat:base-1.7'
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 128.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
    withName: integration_seurat_low {
        container = 'alexthiery/10x-npb-seurat:base-1.7'
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max(64.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
    withName: integration_seurat_med {
        container = 'alexthiery/10x-npb-seurat:base-1.7'
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max(64.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
    withName: integration_seurat_high {
        container = 'alexthiery/10x-npb-seurat:base-1.7'
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max(64.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
}


// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'gpus') {
    try {
      return Math.min( obj, params.max_gpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max gpus '${params.max_gpus}' is not valid! Using default value: $obj"
      return obj as String
    }
  }
}