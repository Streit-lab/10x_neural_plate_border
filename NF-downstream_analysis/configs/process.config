#!/usr/bin/env nextflow


params {
    modules {
    /*
    * Global process params
    */

        'seurat_h5ad' {
            publish_files       = false
            args                = "--assay integrated --outfile seurat --group_by scHelper_cell_type"
        }
        'merge_loom' {
            publish_files       = false
        }
        'gene_modules_latent_time' {
            publish_dir         = "gene_modules_latent_time"
            publish_by_meta     = ['sample_id']
        }
        'refined_gene_modules_latent_time' {
            publish_dir         = "refined_gene_modules_latent_time"
            publish_by_meta     = ['sample_id']
        }



    /*
    * Sub-workflow specific process params
    */

        // Seurat filtering processes
        'preprocessing' {
            publish_dir         = "seurat_filtering/1_preprocessing"
        }
        'integration' {
            publish_dir         = "seurat_filtering/2_integration"
        }
        'integration_qc' {
            publish_dir         = "seurat_filtering/3_integration_qc"
        }
        'sex_filt' {
            publish_dir         = "seurat_filtering/4_sex_filt"
        }
        'cell_cycle' {
            publish_dir         = "seurat_filtering/5_cell_cycle"
        }
        'contamination_filt' {
            publish_dir         = "seurat_filtering/6_contamination_filt"
        }


        // Exploratory analysis processes for full filtered Seurat data
        'scatterplot3d' {
            publish_dir         = "filtered_seurat/seurat/scatterplot3d"
        }
        'gene_modules' {
            publish_dir         = "filtered_seurat/antler/gene_modules"
            args                = "--meta_col scHelper_cell_type"
        }
        'state_classification' {
            publish_dir         = "filtered_seurat/seurat/state_classification"
        }
        'phate' {
            publish_dir         = "filtered_seurat/seurat/phate"
        }
        'seurat_intersect_loom' {
            publish_dir         = "filtered_seurat/scvelo/seurat_intersect_loom"
        }
        'scvelo_run' {
            publish_dir         = "filtered_seurat/scvelo/scvelo_run"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --rootEarliest hh4 hh5 hh6 hh7 ss4 ss8 --rootCol stage --weightDiffusion 0.2 --diffKinetics True"
        }
        'cellrank_run' {
            publish_dir         = "filtered_seurat/cellrank"
            args                = "-c scHelper_cell_type -ck True -kp 0.2 -sm 4 --dataType full"
        }


        // Stage split processes
        'stage_split' {
            publish_files       = false
            args                = "--split stage"
        }
        'stage_cluster' {
            publish_dir         = "stage_split"
            publish_by_meta     = ['sample_id', 'seurat', 'stage_cluster']
            args                = "--clustres 1"
        }
        'stage_gene_modules' {
            publish_dir         = "stage_split"
            publish_by_meta     = ['sample_id', 'antler', 'stage_gene_modules']
            args                = "--meta_col scHelper_cell_type"
        }
        'stage_state_classification' {
            publish_dir         = "stage_split"
            publish_by_meta     = ['sample_id', 'seurat', 'stage_state_classification']
        }
        'stage_seurat_intersect_loom' {
            publish_dir         = "stage_split"
            publish_by_meta     = ['sample_id', 'scvelo', 'seurat_intersect_loom']
        }
        'stage_scvelo_run' {
            publish_dir         = "stage_split"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --weightDiffusion 0.2 --diffKinetics True"
            publish_by_meta     = ['sample_id', 'scvelo', 'scvelo_run']
        }

        // Run split processes
        'run_split' {
            publish_files       = false
            args                = "--split run"
        }
        'run_cluster' {
            publish_dir         = "run_split"
            publish_by_meta     = ['sample_id', 'seurat', 'run_cluster']
        }
        'run_gene_modules' {
            publish_dir         = "run_split"
            publish_by_meta     = ['sample_id', 'antler', 'run_gene_modules']
            args                = "--meta_col scHelper_cell_type"
        }
        'run_state_classification' {
            publish_dir         = "run_split"
            publish_by_meta     = ['sample_id', 'seurat', 'run_state_classification']
        }
        'run_seurat_intersect_loom' {
            publish_dir         = "run_split"
            publish_by_meta     = ['sample_id', 'scvelo', 'seurat_intersect_loom']
        }
        'run_scvelo_run' {
            publish_dir         = "run_split"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --weightDiffusion 0.2 --diffKinetics True"
            publish_by_meta     = ['sample_id', 'scvelo', 'scvelo_run']
        }

        // Cluster subset processes
        'late_stage_subset' {
            publish_dir         = "clusters_subset/late_stage_subset/seurat/clusters_subset"
            args                = "--groups ss4,ss8 --meta_col stage --verbose TRUE --output late_stage_subset"
        }
        'npb_subset' {
            publish_dir         = "clusters_subset/npb_subset/seurat/clusters_subset"
            args                = "--groups PPR,aPPR,pPPR,NPB,pNPB,aNPB,NC,delaminating_NC --meta_col scHelper_cell_type --verbose TRUE --output npb_subset"
        }
        'placodal1_subset' {
            publish_dir         = "clusters_subset/placodal1_subset/seurat/clusters_subset"
            args                = "--groups PPR,aPPR,pPPR --meta_col scHelper_cell_type --verbose TRUE --output placodal1_subset"
        }
        'placodal2_subset' {
            publish_dir         = "clusters_subset/placodal2_subset/seurat/clusters_subset"
            args                = "--groups PPR,aPPR,pPPR,prospective_epidermis,NNE --meta_col scHelper_cell_type --verbose TRUE --output placodal2_subset"
        }
        'filter_contam_subset' {
            publish_dir         = "clusters_subset/filter_contam_subset/seurat/clusters_subset"
            args                = "--groups extra_embryonic,node,early_caudal_neural,ventral_forebrain --meta_col scHelper_cell_type --verbose TRUE --output filter_contam_subset --invert TRUE"
        }
        'clusters_cluster' {
            publish_dir         = "clusters_subset"
            publish_by_meta     = ['sample_id', 'seurat', 'clusters_cluster']
        }
        'clusters_gene_modules' {
            publish_dir         = "clusters_subset"
            publish_by_meta     = ['sample_id', 'antler', 'clusters_gene_modules']
            args                = "--meta_col scHelper_cell_type --force_order scHelper_cell_type"
        }
        'clusters_state_classification' {
            publish_dir         = "clusters_subset"
            publish_by_meta     = ['sample_id', 'seurat', 'clusters_state_classification']
        }
        'clusters_phate' {
            publish_dir         = "clusters_subset"
            publish_by_meta     = ['sample_id', 'seurat', 'phate']
        }
        'clusters_seurat_intersect_loom' {
            publish_dir         = "clusters_subset"
            publish_by_meta     = ['sample_id', 'scvelo', 'seurat_intersect_loom']
        }
        'clusters_scvelo_run' {
            publish_dir         = "clusters_subset"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --weightDiffusion 0.2 --diffKinetics True"
            publish_by_meta     = ['sample_id', 'scvelo', 'scvelo_run']
        }
        'filter_contam_scvelo_run' {
            publish_dir         = "clusters_subset"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --rootEarliest hh4 hh5 hh6 hh7 ss4 ss8 --rootCol stage --weightDiffusion 0.2 --diffKinetics True"
            publish_by_meta     = ['sample_id', 'scvelo', 'scvelo_run']
        }
        'clusters_cellrank_run' {
            publish_dir         = "clusters_subset"
            publish_by_meta     = ['sample_id', 'cellrank']
            args                = "-c scHelper_cell_type -ck True -kp 0.2 -sm 4 --dataType full"
        }


        // Transfer subset processes

        'transfer_late_stage_subset' {
            publish_dir         = "transfer_clusters_subset/late_stage_subset/seurat/clusters_subset"
            args                = "--groups ss4,ss8 --meta_col stage --verbose TRUE --output transfer_late_stage_subset"
        }
        'transfer_npb_subset' {
            publish_dir         = "transfer_clusters_subset/npb_subset/seurat/clusters_subset"
            args                = "--groups PPR,aPPR,pPPR,NPB,pNPB,aNPB,NC,delaminating_NC --meta_col scHelper_cell_type --verbose TRUE --output transfer_npb_subset"
        }
        'transfer_placodal1_subset' {
            publish_dir         = "transfer_clusters_subset/placodal1_subset/seurat/clusters_subset"
            args                = "--groups PPR,aPPR,pPPR --meta_col scHelper_cell_type --verbose TRUE --output transfer_placodal1_subset"
        }
        'transfer_placodal2_subset' {
            publish_dir         = "transfer_clusters_subset/placodal2_subset/seurat/clusters_subset"
            args                = "--groups PPR,aPPR,pPPR,prospective_epidermis,NNE --meta_col scHelper_cell_type --verbose TRUE --output transfer_placodal2_subset"
        }
        'transfer_filter_contam_subset' {
            publish_dir         = "transfer_clusters_subset/filter_contam_subset/seurat/clusters_subset"
            args                = "--groups extra_embryonic,node,early_caudal_neural,ventral_forebrain --meta_col scHelper_cell_type --verbose TRUE --output transfer_filter_contam_subset --invert TRUE"
        }
        
        'transfer_subset_cluster' {
            publish_dir         = "transfer_subset"
            args                = "--meta_col scHelper_cell_type"
            publish_by_meta     = ['sample_id', 'seurat', 'transfer_cluster']
        }
        'transfer_subset_gene_modules' {
            publish_dir         = "transfer_subset"
            publish_by_meta     = ['sample_id', 'antler', 'transfer_gene_modules']
            args                = "--meta_col scHelper_cell_type --force_order scHelper_cell_type"
        }
        'transfer_subset_seurat_intersect_loom' {
            publish_dir         = "transfer_subset"
            publish_by_meta     = ['sample_id', 'scvelo', 'seurat_intersect_loom']
        }
        'transfer_subset_scvelo_run' {
            publish_dir         = "transfer_subset"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --weightDiffusion 0.2 --diffKinetics True --rootEarliest hh4 hh5 hh6 hh7 ss4 ss8 --rootCol stage"
            publish_by_meta     = ['sample_id', 'scvelo', 'scvelo_run']
        }


        // Transfer full processes
        'transfer_labels' {
            publish_dir         = "transfer_labels/seurat"
        }
        'transfer_labels_gene_modules' {
            publish_dir         = "transfer_labels/antler/gene_modules"
            args                = "--meta_col scHelper_cell_type"
        }
        'transfer_labels_seurat_intersect_loom' {
            publish_dir         = "transfer_labels/scvelo/seurat_intersect_loom"
        }
        'transfer_labels_scvelo_run' {
            publish_dir         = "transfer_labels/scvelo/scvelo_run"
            args                = "-m dynamical -c scHelper_cell_type -s stage -b run --coloursColumn cell_colours --npcs 20 --nneighbours 20 --rootEarliest hh4 hh5 hh6 hh7 ss4 ss8 --rootCol stage --weightDiffusion 0.2 --diffKinetics True"
        }
        'transfer_labels_cellrank_run' {
            publish_dir         = "transfer_labels/cellrank"
            args                = "-c scHelper_cell_type -ck True -kp 0.2 -sm 4 --dataType labelTransfer"
        }
        'transfer_labels_cellrank_run2' {
            publish_dir         = "transfer_labels/cellrank"
            args                = "-c scHelper_cell_type -ck True -kp 0.2 -sm 4 --dataType labelTransfer2"
        }
        'refined_cellrank_run' {
            publish_dir         = "refined_labels/cellrank"
            args                = "-c scHelper_cell_type -ck True -kp 0.2 -sm 4 --dataType refined"
        }
    }
}


process {
    // By default processes ran with schelper 0.2.0
    withName: R {
        container = 'alexthiery/10x-npb-schelper:base-0.2.0'
    }

    // Over-ride R process containers
    withName: SCATTERPLOT3D {
        container = 'alexthiery/10x-npb-scatterplot3d:base-0.1'
    }
    // withName: STATE_CLASSIFICATION {
    //     container = 'alexthiery/10x-npb-schelper:base-0.1.3'
    // }
    
    // Set process specific params
    withName: PREPROCESSING {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
    }
    withName: INTEGRATION {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
    }
    withName: SEX_FILT {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
    }
    withName: CELL_CYCLE {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
    }
    withName: CONTAMINATION_FILT {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
    }
    withName: GENE_MODULES {
        cpus = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
        // container = 'alexthiery/10x-npb-schelper:base-0.2.0'
    }
    withName: PHATE {
        container = 'alexthiery/10x-npb-phate:base-1.6'
    }
}


// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'gpus') {
    try {
      return Math.min( obj, params.max_gpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max gpus '${params.max_gpus}' is not valid! Using default value: $obj"
      return obj as String
    }
  }
}
